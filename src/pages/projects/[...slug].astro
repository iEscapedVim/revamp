---
import { getCollection, type CollectionEntry } from "astro:content";
import { Image } from "astro:assets";

export async function getStaticPaths() {
  const blog = await getCollection("projects");
  return blog.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry,  },
  }));
}

type Props = {
  entry: CollectionEntry<"projects">;
};

const { entry } = Astro.props;
const { Content } = await entry.render();

import Layout from '@layouts/MarkdownLayout.astro';
import RecentCard from '@comps/sidebar/recentCardBlog.astro';
import RecentProjects from '@comps/sidebar/recentCard.astro';

const allPosts = await getCollection("blog");
const allProjects = await getCollection("projects");
---

<Layout frontmatter={entry.data}>
  <div class="col-span-6 h-fit border-2 border-primary rounded-lg mb-12">
    <div class="w-full bg-cover bg-no-repeat relative">
      <Image src={entry.data.image} alt={entry.data.title} class="w-full h-full rounded-xl object-cover" />
      <span class="w-full h-1/4 absolute bottom-0 flex justify-center items-center bg-gradient-to-r from-primary/80 to-secondary/80 backdrop-blur-[2px]">
        <h1 class="text-3xl font-bold text-white">{entry.data.title}</h1>
      </span>
    </div>
    <article class="w-full px-6 py-6 prose-lg prose-headings:font-bold prose-headings:my-3 prose-headings:text-primary prose-p:text-gray-700 prose-img:rounded-xl">
      <hr class="border-0.5 my-3 pb-3 border-primary" />
      <Content />
    </article>
  </div>
  <div class="col-span-2 h-fit border-2 border-primary rounded-lg bg-white/40 backdrop-blur-[2px] shadow-md z-10">
    <div class="py-3 px-2">
      <h4>
        <span class="text-2xl font-bold text-primary">Recent Posts</span>
      </h4>
      {allPosts.sort((a: { data: { pubDate: string | number | Date; }; }, b: { data: { pubDate: string | number | Date; }; }) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()).slice(0, 3).map((p: any) => <RecentCard post={p}/>)}
      
    </div>
    <div class="py-3 px-2">
      <h4>
        <span class="text-2xl font-bold text-primary">Recent Projects</span>
      </h4>
      {allProjects.sort((a: { data: { pubDate: string | number | Date; }; }, b: { data: { pubDate: string | number | Date; }; }) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()).slice(0, 3).map((p: any) => <RecentProjects post={p}/>)}
    </div>
  </div>
</Layout>
