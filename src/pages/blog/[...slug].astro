---
import { getCollection, type CollectionEntry } from "astro:content";
import { Image } from "astro:assets";

export async function getStaticPaths() {
  const blog = await getCollection("blog");
  return blog.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry,  },
  }));
}
type Props = {
  entry: CollectionEntry<"blog">;
};
const { entry } = Astro.props;
const { Content } = await entry.render();

import Layout from '@layouts/MarkdownLayout.astro';
import RecentCard from '@comps/sidebar/recentCardBlog.astro';
import RecentProjects from '@comps/sidebar/recentCard.astro';

const allPosts = await getCollection("blog");
const allProjects = await getCollection("projects");

const currentPageURL = Astro.request.url;

import Email from "@comps/share/Email.astro";
import Facebook from '@comps/share/Facebook.astro';
import Twitter from '@comps/share/Twitter.astro';
import Whatsapp from '@comps/share/Whatsapp.astro';
import LinkedIn from "@comps/share/LinkedIn.astro";
import Medium from '@comps/share/Medium.astro';
import Reddit from '@comps/share/Reddit.astro';
import Telegram from '@comps/share/Telegram.astro';
---
<Layout frontmatter={entry.data}>
  <div class="bg-white/40 backdrop-blur-[2px] shadow-md z-10 col-span-6 h-fit border-2 border-primary rounded-lg mb-12">
    <div class="w-full bg-cover bg-no-repeat relative">
      <Image src={entry.data.image} alt={entry.data.title} class="w-full h-full rounded-xl object-cover" />
      <span class="w-full h-1/4 absolute bottom-0 flex justify-center items-center bg-gradient-to-r from-primary/80 to-secondary/80 backdrop-blur-[2px]">
        <h1 class="text-3xl font-bold text-white">{entry.data.title}</h1>
      </span>
    </div>
    <article class="w-full px-6 py-6 prose-lg prose-headings:font-bold prose-headings:my-3 prose-headings:text-primary prose-p:text-gray-700 prose-img:rounded-xl prose-ul:[list-style-type:disc] prose-ol:[list-style-type:decimal] prose-strong:text-primary">
      <Content />
    </article>
    <div class="w-full flex flex-row gap-3 justify-center items-center py-4">
      <h3 class="text-2xl font-bold text-primary">Share:</h3>
      <Reddit url={currentPageURL} title={entry.data.title} description={entry.data.description} />
      <Facebook url={currentPageURL} title={entry.data.title} description={entry.data.description} />
      <Twitter url={currentPageURL} title={entry.data.title} description={entry.data.description} />
      <LinkedIn url={currentPageURL} title={entry.data.title} description={entry.data.description} />
      <Medium url={currentPageURL} title={entry.data.title} description={entry.data.description} />
      <Whatsapp url={currentPageURL} title={entry.data.title} description={entry.data.description} />
      <Telegram url={currentPageURL} title={entry.data.title} description={entry.data.description} />
      <Email url={currentPageURL} title={entry.data.title} description={entry.data.description} />
    </div>      
  </div>
  <div class="col-span-2 h-fit border-2 border-primary rounded-lg bg-white/40 backdrop-blur-[2px] shadow-md z-10">
      <div class="py-3 px-2">
        <h4>
          <span class="text-2xl font-bold text-primary">Recent Posts</span>
        </h4>
        {allPosts.sort((a: { data: { pubDate: string | number | Date; }; }, b: { data: { pubDate: string | number | Date; }; }) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()).slice(0, 3).map((p: any) => <RecentCard post={p}/>)}
        
      </div>
      <div class="py-3 px-2">
        <h4>
          <span class="text-2xl font-bold text-primary">Recent Projects</span>
        </h4>
        {allProjects.sort((a: { data: { pubDate: string | number | Date; }; }, b: { data: { pubDate: string | number | Date; }; }) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()).slice(0, 3).map((p: any) => <RecentProjects post={p}/>)}
      </div>
  </div>
</Layout>
