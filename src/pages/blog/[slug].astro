---
import Sidebar from '@comps/sidebar/sidebar.astro';
import Layout from '@layouts/MarkdownLayout.astro';
import { getPost, getPosts } from '@/lib/wordpress';
import { FULL_TITLE } from '@/consts';
import { extractHeadings, addIdsToHeadings } from '@/lib/toc';

export async function getStaticPaths() {
  const posts = await getPosts();
  return posts.map((post: any) => ({
    params: { slug: post.slug },
  }));
}

const { slug } = Astro.params;
const post = await getPost(slug);

if (!post) {
  return Astro.redirect('/404');
}

const date = new Date(post.date);
const formattedDate = date.toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});

const modifiedDate = new Date(post.modified);
const formattedModifiedDate = modifiedDate.toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});

const isModified = date.getTime() !== modifiedDate.getTime();

const headings = extractHeadings(post.content);
const contentWithIds = addIdsToHeadings(post.content);

import Email from "@comps/share/Email.astro";
import Facebook from '@comps/share/Facebook.astro';
import Twitter from '@comps/share/Twitter.astro';
import Whatsapp from '@comps/share/Whatsapp.astro';
import LinkedIn from "@comps/share/LinkedIn.astro";
import Medium from '@comps/share/Medium.astro';
import Reddit from '@comps/share/Reddit.astro';
import Telegram from '@comps/share/Telegram.astro';
const currentPageURL = Astro.url.href;
import { Image } from "astro:assets";

const postExcerpt = post.excerpt.replace(/<p>/g, '').replace(/<\/p>/g, '');
---
<Layout SiteTitle={post.title + " | " + FULL_TITLE} postTitle={post.title} postDescription={postExcerpt} postImage={post.featuredImage?.node?.sourceUrl || 'https://placehold.co/550x300?text=No+Feaured+Image'} publishDate={post.date} modifiedDate={post.modified} postSlug={post.slug}>

  <div class="col-span-1 h-fit md:flex justify-center relative hidden">
    <div class="flex flex-col gap-3 bg-white/60 backdrop-blur-[2px] fixed border-2 border-primary rounded-lg p-3">
      <Reddit url={currentPageURL} title={post.title} description={postExcerpt} loading="eager" />
      <Facebook url={currentPageURL} title={post.title} description={postExcerpt} loading="eager" />
      <Twitter url={currentPageURL} title={post.title} description={postExcerpt} loading="eager" />
      <LinkedIn url={currentPageURL} title={post.title} description={postExcerpt} loading="eager" />
      <Medium url={currentPageURL} title={post.title} description={postExcerpt} loading="eager" />
      <Whatsapp url={currentPageURL} title={post.title} description={postExcerpt} loading="eager" />
      <Telegram url={currentPageURL} title={post.title} description={postExcerpt} loading="eager" />
      <Email url={currentPageURL} title={post.title} description={postExcerpt} loading="eager" />
    </div>
  </div>

  <div class="bg-white/60 backdrop-blur-[2px] shadow-md z-10 col-span-12 md:col-span-8 h-fit border-2 border-primary rounded-lg mb-3">

    <div class="w-full bg-cover bg-no-repeat relative">
      <Image loading={"eager"} src={post.featuredImage?.node?.sourceUrl || 'https://placehold.co/550x300?text=No+Feaured+Image'} alt={post.featuredImage?.node?.altText || post.title} class="w-full h-full object-cover" width={550} height={300} />
      <span class="w-full h-24 md:h-32 px-6 absolute bottom-0 flex justify-center items-center bg-gradient-to-r from-primary/80 to-secondary/80 backdrop-blur-[2px]">
        <h1 class="text-xl md:text-3xl font-bold text-white">{post.title}</h1>
      </span>
    </div>

    <div class="flex flex-col md:flex-row justify-between items-center pt-4 px-4">
      <time datetime={post.date} class="text-sm text-primary font-bold">
        Posted on: 
        <span class="font-normal text-gray-700">
          {formattedDate}
        </span>
      </time>
      
      {isModified && (
        <time datetime={post.modified} class="text-sm text-primary font-bold">
          Modified on: 
          <span class="font-normal text-gray-700">
            {formattedModifiedDate}
          </span>
        </time>
      )}
    </div>

    {headings.length > 0 && (
      <div class="mx-6 my-8 p-6 bg-gradient-to-r from-primary/10 to-secondary/10 rounded-lg border border-primary/20">
        <h2 class="text-2xl font-bold text-primary mb-4">Table of Contents</h2>
        <nav class="toc">
          <ul class="space-y-2 list-disc ms-8">
            {headings.map((heading) => (
              <li class={`ml-${(heading.level - 1) * 4}`}>
                <a href={`#${heading.id}`} class="text-gray-700 hover:text-primary hover:underline transition-colors duration-200">
                  {heading.text}
                </a>
              </li>
            ))}
          </ul>
        </nav>
      </div>
    )}

    <article class="w-full px-6 py-6 prose-lg prose-headings:font-bold prose-headings:my-3 prose-headings:text-primary prose-p:text-gray-700 prose-img:rounded-xl prose-ul:[list-style-type:disc] prose-ol:[list-style-type:decimal] prose-strong:text-primary" set:html={contentWithIds}>
    </article>

    <div class="w-full flex flex-col gap-3 justify-center items-center py-4">
      <div class="flex flex-row gap-3 justify-center items-center">
        <h3 class="text-2xl font-bold text-primary">Share:</h3>
        <Reddit url={currentPageURL} title={post.title} description={postExcerpt} loading="lazy" />
        <Facebook url={currentPageURL} title={post.title} description={postExcerpt} loading="lazy" />
        <Twitter url={currentPageURL} title={post.title} description={postExcerpt} loading="lazy" />
        <LinkedIn url={currentPageURL} title={post.title} description={postExcerpt} loading="lazy" />
        <Medium url={currentPageURL} title={post.title} description={postExcerpt} loading="lazy" />
        <Whatsapp url={currentPageURL} title={post.title} description={postExcerpt} loading="lazy" />
        <Telegram url={currentPageURL} title={post.title} description={postExcerpt} loading="lazy" />
        <Email url={currentPageURL} title={post.title} description={postExcerpt} loading="lazy" />
      </div>
    </div>

    <div id="disqus_thread" class="p-12"></div>

  </div>

  <div class="col-span-12 md:col-span-3 h-fit">
    <Sidebar />
  </div>

  <script type="text/javascript" define:vars={{ currentPageURL }}>
    function loadDisqus() {
      var disqus_config = function () {
        this.page.url = currentPageURL;  
        this.page.identifier = currentPageURL;
      };
  
      (function() {
        if (document.getElementById('disqus_thread').innerHTML) return; // Prevent duplicate loads
        var d = document, s = d.createElement('script');
        s.src = 'https://iescapedvim.disqus.com/embed.js';
        s.setAttribute('data-timestamp', +new Date());
        (d.head || d.body).appendChild(s);
      })();
    }
  
    // Initial placeholder
    document.getElementById('disqus_thread').innerHTML = '<p>Loading comments...</p>';
  
    // Load Disqus when the user scrolls near the comments section
    let disqusLoaded = false;
    function handleScroll() {
      const disqusThread = document.getElementById('disqus_thread');
      if (disqusThread && !disqusLoaded && isElementInViewport(disqusThread)) {
        loadDisqus();
        disqusLoaded = true;
        window.removeEventListener('scroll', handleScroll);
      }
    }
  
    function isElementInViewport(el) {
      const rect = el.getBoundingClientRect();
      return (
        rect.top >= 0 &&
        rect.left >= 0 &&
        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
        rect.right <= (window.innerWidth || document.documentElement.clientWidth)
      );
    }
  
    window.addEventListener('scroll', handleScroll);
    handleScroll(); // Check on initial load if it is already in view
  </script>
  <noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
</Layout>